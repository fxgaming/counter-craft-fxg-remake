package com.ferullogaming.countercraft.client.cloud.packet;

import com.f3rullo14.cloud.G_TcpPacket;
import com.ferullogaming.countercraft.client.cloud.packet.friend.PacketFriendJoinGame;
import com.ferullogaming.countercraft.client.cloud.packet.friend.PacketFriendPoke;
import com.ferullogaming.countercraft.client.cloud.packet.friend.PacketFriendRemove;
import com.ferullogaming.countercraft.client.cloud.packet.friend.PacketFriendRequest;
import com.ferullogaming.countercraft.client.cloud.packet.friend.PacketFriendRequestAccept;
import com.ferullogaming.countercraft.client.cloud.packet.friend.PacketMessageFromCloud;
import com.ferullogaming.countercraft.client.cloud.packet.friend.PacketMessageSend;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketMarketBrowseSearch;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketMarketBrowseSearchResult;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketMarketCreateListing;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketMarketListingAction;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketMarketMyListingAction;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketMarketMyListingSync;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketMarketRequestCategory;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketMarketRequestCategoryResult;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketMarketStoreOrder;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketRequestedMarketMyListings;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketRequestedMarketStoreItems;
import com.ferullogaming.countercraft.client.cloud.packet.market.PacketRequestedMarketValue;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketMMJoinServer;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketMMSearch;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketMMSearchCloudCanceled;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketMMSearchHostCanceled;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketPartyChatToClient;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketPartyChatToCloud;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketPartyCreate;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketPartyEditSettings;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketPartyInvite;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketPartyJoin;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketPartyJoined;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketPartyKick;
import com.ferullogaming.countercraft.client.cloud.packet.mm.PacketPartyLeave;
import com.ferullogaming.countercraft.client.cloud.packet.server.PacketCompetitiveAbandon;
import com.ferullogaming.countercraft.client.cloud.packet.server.PacketCompetitiveLeave;
import com.ferullogaming.countercraft.client.cloud.packet.server.PacketCompetitiveRejoin;
import com.ferullogaming.countercraft.client.cloud.packet.server.PacketPlayerDataIncreaseValue;
import com.ferullogaming.countercraft.client.cloud.packet.server.PacketPlayerDataRandomDrop;
import com.ferullogaming.countercraft.client.cloud.packet.server.PacketServerGameStatus;
import com.ferullogaming.countercraft.client.cloud.packet.server.PacketServerMatchMaking;
import com.ferullogaming.countercraft.client.cloud.packet.server.PacketServerMatchMakingAccepted;
import com.ferullogaming.countercraft.client.cloud.packet.server.PacketServerNotification;
import com.ferullogaming.countercraft.client.cloud.packet.supporter.PacketToggleSupporter_Cape;

public class PacketRegistry {
   public static int nextPacket = 10;

   public static void registerPackets() {
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketClientRequest.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedPlayerData.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedInventory.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPartyCreate.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketNotificationFromCloud.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedFriends.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketFriendRequest.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketFriendRequestAccept.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketFriendRemove.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventorySetItemDefault.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedItemDefault.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryItemAdded.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryItemSticker.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryOpenCase.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryCaseResults.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketFriendPoke.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedTrading.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketTradeRequestedUser.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketTradeRequestUser.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketTradeCreate.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketTradeAction.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedMarketValue.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMarketCreateListing.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedMarketMyListings.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMarketMyListingAction.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMarketBrowseSearch.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMarketBrowseSearchResult.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMarketRequestCategory.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMarketRequestCategoryResult.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMarketListingAction.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketServerMatchMaking.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketServerNotification.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketServerGameStatus.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMMSearch.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMMSearchCloudCanceled.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMMSearchHostCanceled.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedCloudData.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryItemDelete.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMessageSend.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMessageFromCloud.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryItemRemoved.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedMarketStoreItems.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMarketStoreOrder.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryItemShowcase.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketEditStatus.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPartyEditSettings.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPartyLeave.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPartyInvite.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPartyJoin.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPartyChatToCloud.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPartyChatToClient.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPartyJoined.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryItemRename.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryItemClearName.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketServerMatchMakingAccepted.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMMJoinServer.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketMarketMyListingSync.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPlayerDataIncreaseValue.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPlayerDataRandomDrop.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketBanned.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketClientUpdateStatus.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketFriendJoinGame.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryContract.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryBooster.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketConsoleCommand.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketConsoleMessage.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketPartyKick.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestedPunishments.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketCompetitiveAbandon.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketCompetitiveRejoin.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketCompetitiveLeave.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketEditClanTag.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketRequestCandy.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketSendCandy.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryOpenStickerCapsule.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryStickerCapsuleResults.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryItemApplySticker.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketInventoryItemRemoveSticker.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketToggleNotification_Poke.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketToggleNotification_TradeRequests.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketToggleNotification_FriendRequests.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketTogglePrivacy_Profile.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketTogglePrivacy_TradeRequests.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketTogglePrivacy_FriendRequests.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketToggleSupporter_Cape.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketKickedPlayer.class);
      G_TcpPacket.addPacketMapping(getNextPacket(), PacketCheckPrestige.class);
   }

   public static int getNextPacket() {
      int packetID = nextPacket++;
      return packetID;
   }
}
